import hashlib
import os
import time
from datetime import datetime

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
–î–û–°–¢–£–ü–ù–´–ï_–ê–õ–ì–û–†–ò–¢–ú–´ = {
    '1': 'md5',
    '2': 'sha1',
    '3': 'sha256',
    '4': 'sha512',
    '5': 'blake2b',
    '6': 'blake2s'
}

def –≤—ã—á–∏—Å–ª–∏—Ç—å_—Ö—ç—à_—Ç–µ–∫—Å—Ç–∞(—Ç–µ–∫—Å—Ç, –∞–ª–≥–æ—Ä–∏—Ç–º='sha256'):
    """–•—ç—à–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º."""
    try:
        hasher = hashlib.new(–∞–ª–≥–æ—Ä–∏—Ç–º)
        hasher.update(—Ç–µ–∫—Å—Ç.encode())
        return hasher.hexdigest()
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def –≤—ã—á–∏—Å–ª–∏—Ç—å_—Ö—ç—à_—Ñ–∞–π–ª–∞(–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É, –∞–ª–≥–æ—Ä–∏—Ç–º='sha256'):
    """–•—ç—à–∏—Ä—É–µ—Ç —Ñ–∞–π–ª –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º."""
    if not os.path.exists(–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É):
        return "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –û–Ω –≤ –¥—Ä—É–≥–æ–º –∑–∞–º–∫–µ?"
    
    try:
        hasher = hashlib.new(–∞–ª–≥–æ—Ä–∏—Ç–º)
        with open(–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É, 'rb') as —Ñ–∞–π–ª:
            while chunk := —Ñ–∞–π–ª.read(8192):
                hasher.update(chunk)
        return hasher.hexdigest()
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def –≥–ª–∞–≤–Ω–æ–µ_–º–µ–Ω—é():
    """–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    while True:
        print("\n‚öîÔ∏è  –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –•—ç—à–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç")
        print("2. –•—ç—à–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª")
        print("3. –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã")
        print("4. –í—ã–π—Ç–∏")
        
        –≤—ã–±–æ—Ä = input("> ")
        
        if –≤—ã–±–æ—Ä == "1":
            —Ç–µ–∫—Å—Ç = input("–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç: ")
            –∞–ª–≥–æ—Ä–∏—Ç–º = –≤—ã–±—Ä–∞—Ç—å_–∞–ª–≥–æ—Ä–∏—Ç–º()
            if –∞–ª–≥–æ—Ä–∏—Ç–º:
                start_time = time.time()
                —Ö—ç—à = –≤—ã—á–∏—Å–ª–∏—Ç—å_—Ö—ç—à_—Ç–µ–∫—Å—Ç–∞(—Ç–µ–∫—Å—Ç, –∞–ª–≥–æ—Ä–∏—Ç–º)
                elapsed = time.time() - start_time
                print(f"\nüîê {–∞–ª–≥–æ—Ä–∏—Ç–º.upper()} —Ö—ç—à: {—Ö—ç—à}")
                print(f"‚è±  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {elapsed:.4f} —Å–µ–∫.")
        
        elif –≤—ã–±–æ—Ä == "2":
            –ø—É—Ç—å = input("–í–≤–µ–¥–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: ")
            –∞–ª–≥–æ—Ä–∏—Ç–º = –≤—ã–±—Ä–∞—Ç—å_–∞–ª–≥–æ—Ä–∏—Ç–º()
            if –∞–ª–≥–æ—Ä–∏—Ç–º:
                start_time = time.time()
                —Ö—ç—à = –≤—ã—á–∏—Å–ª–∏—Ç—å_—Ö—ç—à_—Ñ–∞–π–ª–∞(–ø—É—Ç—å, –∞–ª–≥–æ—Ä–∏—Ç–º)
                elapsed = time.time() - start_time
                print(f"\nüìú {–∞–ª–≥–æ—Ä–∏—Ç–º.upper()} —Ö—ç—à —Ñ–∞–π–ª–∞: {—Ö—ç—à}")
                print(f"‚è±  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {elapsed:.4f} —Å–µ–∫.")
        
        elif –≤—ã–±–æ—Ä == "3":
            –ø–æ–∫–∞–∑–∞—Ç—å_–∞–ª–≥–æ—Ä–∏—Ç–º—ã()
        
        elif –≤—ã–±–æ—Ä == "4":
            print("üåå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –¢–µ–Ω—å —Ä–∞—Å—Ç–≤–æ—Ä—è–µ—Ç—Å—è –≤ –Ω–æ—á–∏...")
            break
        
        else:
            print("üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")

def –≤—ã–±—Ä–∞—Ç—å_–∞–ª–≥–æ—Ä–∏—Ç–º():
    """–í—ã–±–æ—Ä –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è."""
    –ø–æ–∫–∞–∑–∞—Ç—å_–∞–ª–≥–æ—Ä–∏—Ç–º—ã()
    –≤—ã–±–æ—Ä = input("–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∞–ª–≥–æ—Ä–∏—Ç–º–∞: ")
    if –≤—ã–±–æ—Ä in –î–û–°–¢–£–ü–ù–´–ï_–ê–õ–ì–û–†–ò–¢–ú–´:
        return –î–û–°–¢–£–ü–ù–´–ï_–ê–õ–ì–û–†–ò–¢–ú–´[–≤—ã–±–æ—Ä]
    else:
        print("üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –∞–ª–≥–æ—Ä–∏—Ç–º–∞!")
        return None

def –ø–æ–∫–∞–∑–∞—Ç—å_–∞–ª–≥–æ—Ä–∏—Ç–º—ã():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã."""
    print("\nüîÆ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã:")
    for num, name in –î–û–°–¢–£–ü–ù–´–ï_–ê–õ–ì–û–†–ò–¢–ú–´.items():
        print(f"{num}. {name.upper()}")

if __name__ == "__main__":
    print("üéå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –£—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω–æ–µ –•—ç—à-–î–æ–¥–∑—ë")
    print(f"üìÖ –°–µ–≥–æ–¥–Ω—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    –≥–ª–∞–≤–Ω–æ–µ_–º–µ–Ω—é()